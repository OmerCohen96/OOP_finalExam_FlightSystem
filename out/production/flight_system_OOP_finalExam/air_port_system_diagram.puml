@startuml
'https://plantuml.com/sequence-diagram
BookingManager --> Passenger
FlightObserver <|.. Passenger
Passenger --> Ticket
Passenger --* PassengersServiceFacade
PassengersServiceFacade <|.. BookingManager
SearchFactory *- SearchStrategy
SearchStrategy <|.. byPrice
SearchStrategy <|.. byDestination
SearchStrategy <|.. byDate
SearchFactory <.. BookingManager
BookingManager --* AirLineManager
AirLineManager --> AirLine
AirLine <|-- GroupAirLine
AirLine <-- GroupAirLine
AirLine <|-- SingularAirLine
AirLine --> Flight
Flight *-- MyDate
Flight <-- BookingManager

class Ticket {
flight
ticket
}

interface FlightObserver{
    +update()
}

interface SearchStrategy<<Strategy>>{
    +search (Flights): matchingFlights
}


class Passenger<<user>>{
    -name
    -ID
    -ServiceFacade
    -tickets []
    + purchaseTicket()
    +searchFlight()
    +getPushes()
    +gettersToFields()
}

class SearchFactory <<static class>>{
    +{static}generate(): searchStrategy
}

class byPrice <<concStrategy>>
class byDestination <<concStrategy>>
class byDate <<concStrategy>>

interface PassengersServiceFacade<<Facade>>{
    +{abstract}purchaseTicket()
    +{abstract}searchFlight()
    +{abstract}subscribePushes()
    +{abstract}unsubscribePushes()
}

class BookingManager <<Singleton>>{
    -AirLineManager
    -map flightsBook
    -flightsNewsLetter
    +addNewFlight()
    +searchFlight()
    +purchaseTicket()
}

class AirLineManager <<Singelton>>{
    -airLineGroups [ ]
    +{static}Static getInstance()
    +addAirLineGroup()
    +getAirLineGroups()
    +findAirLineGroup()
    +removeAirLineGroup()
    +getAirLineComponent()
    +findAirLineComponent()
}

abstract AirLine <<Component>>{
    -companyName
    -flights [ ]

    #getInternalFlights()
    +getCompanyName()
    +removeFlight()
    +addFlight()
    + {abstract} getAllFlights()
    + {abstract}  getAllcompanies()
}

class GroupAirLine <<Composite>> {
    -subsidiaryAirLines [ ]
    +addSubsidiary()
    +removeSubsidiary()
}

class SingularAirLine <<Leaf>>

class Flight{
    -{static}SERIAL_NUMBER
    -flight_code
    -origin
    -destination
    -airLineName
    -departureTime
    -arrivalTime
    -double price
    --
    simple Getters&Setters
}

class MyDate{
    - LocalDateTime
    +{static}MyDate of(String)
    +{static}boolean isValid(String)
    +equals()
    +equalsByDate()
    +isAfter()
    +isBefore()
}


@enduml